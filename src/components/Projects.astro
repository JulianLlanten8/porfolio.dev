---
import GitHub from "./icons/GitHub.astro";
import VueJS from "./icons/VueJs.astro";
import Javascript from "./icons/Javascript.astro";
import TypeScript from "./icons/TypeScript.astro";
import React from "./icons/React.astro";
import CSS from "./icons/CSS.astro";
import Link from "./icons/Link.astro";
import LinkButton from "./LinkButton.astro";
import Tailwind from "./icons/Tailwind.astro";

const TAGS = {
  VUE: {
    name: "Vue.js",
    class: "bg-emerald-100 text-emerald-900 dark:bg-emerald-900 dark:text-emerald-100",
    icon: VueJS,
  },
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-blue-100 text-blue-900 dark:bg-blue-900 dark:text-blue-100",
    icon: Tailwind,
  },
  CSS: {
    name: "CSS",
    class: "bg-blue-100 text-blue-900 dark:bg-blue-900 dark:text-blue-100",
    icon: CSS,
  },
  Javascript: {
    name: "Javascript",
    class: "bg-yellow-100 text-yellow-900 dark:bg-yellow-900 dark:text-yellow-100",
    icon: Javascript,
  },

  TypeScript: {
    name: "TypeScript",
    class: "bg-indigo-100 text-indigo-900 dark:bg-indigo-900 dark:text-indigo-100",
    icon: TypeScript,
  },
  React: {
    name: "React",
    class: "bg-cyan-100 text-cyan-900 dark:bg-cyan-900 dark:text-cyan-100",
    icon: React,
  },
};
const PROJECTS = [
  {
    title:
      "Lista de de todos los personajes de la serie animada Rick and Morty",
    description:
      "Lista de todos los personajes de la serie animada Rick and Morty. Creada con Vue.js y Sass CSS. Consumiendo la API de Rick and Morty.",
    link: "https://rick-and-morty-eql4u8x3h-rick-morty.vercel.app/",
    github: "https://github.com/https-github-com-JLlanten8/rick-and-morty",
    image: "/projects/llantenJulian08-Rick&morty.webp",
    tags: [TAGS.VUE, TAGS.CSS],
  },
  {
    title: "Grabador de pantalla y audio en la web",
    description: "Grabador de pantalla en la web. Creado con javascrip y CSS. Utilizando la API de MediaRecorder para grabar la pantalla y el audio.",
    link: "https://grabador-de-pantalla.julianll.dev/",
    image: "/projects/graba-midu-lian.webp",
    tags: [TAGS.Javascript, TAGS.CSS],
  },
  {
    title: "Buscador de GIFs",
    description: "Buscador de GIFs. Creado con TypeScript y React. Utilizando la API de Giphy para buscar GIFs.",
    link: "https://gif-app.julianll.dev/",
    image: "/projects/gif-app.webp",
    tags: [TAGS.React, TAGS.TypeScript, TAGS.CSS],
  },
  {
    title: "Pokemon Game - Juego de Pokemon",
    description: "Adivina el Pokemon. Juego de adivinanza de Pokemon. Creado con Vue y TypeScript. Utilizando la API de PokeAPI para obtener los datos de los Pokemon.",
    link: "https://pokemon-game.julianll.dev/",
    image: "/projects/pokemon-game.webp",
    tags: [TAGS.VUE, TAGS.TypeScript, TAGS.CSS],
  },
  {
    title: "Si o no ? - Aplicación de toma de decisiones",
    description: "Aplicación de toma de decisiones. Creada con Vue.js y CSS. Utilizando la API de yes/no para tomar decisiones.",
    link: "https://si-o-no.julianll.dev/",
    image: "/projects/si-o-no.webp",
    tags: [TAGS.VUE, TAGS.CSS,TAGS.TAILWIND],
    github: "https://github.com/JulianLlanten8/Vue.js-De-cero-a-experto-indecision-app",
  },
  {
    title: "Game of Thrones - Lista de personajes",
    description: "Lista de personajes de la serie Game of Thrones. Creada con Vue.js y CSS. Consumiendo la API de Game of Thrones.",
    link: "https://game-of-thrones.julianll.dev/",
    image: "/projects/game-of-thrones.webp",
    tags: [TAGS.VUE, TAGS.CSS],
    github: "https://github.com/JulianLlanten8/game-of-trones"
  },

];
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
      <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
        <div class="w-full md:w-1/2">
          <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
            <img
              alt={title}
              class="object-cover object-top w-full h-56 sm:h-64 md:h-56 transition duration-500 md:scale-110 md:group-hover:scale-105"
              loading="lazy"
              src={image}
            />
          </div>
        </div>

        <div class="w-full md:w-1/2 md:max-w-lg">
          <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
            {title}
          </h3>
          <div class="flex flex-wrap mt-2">
            <ul class="flex flex-row mb-2 gap-x-2">
              {tags.map((tag) => (
                <li>
                  <span
                    class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                  >
                    <tag.icon class="size-4" />
                    {tag.name}
                  </span>
                </li>
              ))}
            </ul>

            <div class="mt-2 text-gray-700 dark:text-gray-400">
              {description}
            </div>
            <footer class="flex items-end justify-start mt-4 gap-x-4">
              {github && (
                <LinkButton href={github}>
                  <GitHub class="size-6" />
                  Code
                </LinkButton>
              )}
              {link && (
                <LinkButton href={link}>
                  <Link class="size-4" />
                  Preview
                </LinkButton>
              )}
            </footer>
          </div>
        </div>
      </article>
    ))
  }
</div>
